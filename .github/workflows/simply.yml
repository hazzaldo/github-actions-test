# Name of workflow
name: Shell Commands

# Define events that would trigger this workflow
on: [push]

# Define the jobs that get triggered (jobs as an object, with keys in the object being the names of the jobs). 
# You can have dashes or underscores for the key names (i.e. jobs' names), but no spaces.
jobs:
  # The value for this key (job) is an object, hence the new lone of key-value pairs
  run-shell-command:
    # Define the OS VM to run the job on
    runs-on: ubuntu-latest
    # Define the steps (an array of objects - where each object represents a step)
    steps:
      # The name of the step - in this case it's called "echo a string". The second element of this object is a shell command to echo a string
      - name: echo a string
        # The second element of this object is a shell command to echo a string. By default Ubuntu (& MacOS) will have a bash shell. Windows has a Power Shell. So for Ubuntu ensure you write shell commands
        run: echo "Hello World"
      # We add one more step 
      - name: multiline script
        # The Pipe symbol can allow for multiple commands to run in the same step
          # Step 1: run Node version
          # Step 2: run NPM version
        run: |
          node -v 
          npm -v
        # This step runs python script. GitHub Actions has Python shell (runtime) installed
      - name: python commands
        # python script to print the processor info of the machine the workflow will run on
        run: |
          import platform
          print(platform.processor())
        shell: python





